openapi: 3.0.3
info:
  title: Sample REST APIs using Flask, OpenAPI and Connexion
  description: Sample REST APIs using Flask, OpenAPI and Connexion
  version: "1.0.0"
servers:
  - url: http://localhost:5000
    description: Rest Server showing Swagger and Connexion capability
paths:
  /avalabilities:
    get:
      operationId: controllers.handleRoutes.getAllSlots
      tags:
        - Avalaibilities
      summary: Returns a list of items.
      description: Returns a list of items.
      responses:
        "200": # status code
          description: Return the entire list of items.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Avalabilities"
    post:
      operationId: controllers.handleRoutes.createSlot
      tags:
        - Avalaibilities
      summary: Create a new Item
      description: Create a new Item
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Avalabilities"
      responses:
        "201":
          description: Item Created successfully
  /avalabilities/{id}:
    delete:
      operationId: controllers.handleRoutes.deleteSlot
      tags:
        - Avalaibilities
      summary: Delete an Item with given ID
      description: Delete an Item with given ID
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200": # status code
          description: Deleted an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Avalabilities"
  /reservation:
    get:
      operationId: controllers.handleRoutes.getAllRes
      tags:
        - Reservation
      summary: Returns a list of items.
      description: Returns a list of items.
      responses:
        "200": # status code
          description: Return the entire list of items.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
    post:
      operationId: controllers.handleRoutes.createRes
      tags:
        - Reservation
      summary: Create a new Item
      description: Create a new Item
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservation"
      responses:
        "201":
          description: Item Created successfully
  /reservation/{id}:
    delete:
      operationId: controllers.handleRoutes.deleteRes
      tags:
        - Reservation
      summary: Delete an Item with given ID
      description: Delete an Item with given ID
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200": # status code
          description: Deleted an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Reservation"
components:
  schemas:
    Avalabilities:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDT:
          type: string
        endDT:
          type: string
    Reservation:
      type: object
      properties: 
        id:
          type: integer
          format: int64
        startDT:
          type: string
        endDT: 
          type: string
        email: 
          type: string